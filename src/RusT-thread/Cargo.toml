[package]
name = "RusT-thread"
version = "0.1.0"
edition = "2024"

build = "build.rs"

[build-dependencies]
cc = "1.0"

[dependencies]
cortex-m = { version = "0.5.8", optional = true }        # cortex-m 核心指令集
cortex-m-semihosting = { version = "0.5", optional = true }  # 运行时与宿主机交互
cortex-m-rt = { version = "0.6.5", optional = true }     # 最小运行时，负责启动内存初始化和中断处理
panic-halt = { version = "0.2.0", optional = true }      # 定义发生 panic 时采取立即停机的行为
# stm32f4xx-hal = { version = "0.17", features = ["rt", "stm32f405"] }    # 芯片厂商驱动
buddy_system_allocator = { version = "0.11.0", optional = true }
good_memory_allocator = { version = "0.1.7", optional = true }
lazy_static = { version = "1.4.0", features = ["spin_no_std"], optional = true }
spin = { version = "0.9.8", optional = true }
heapless = { version = "0.8.0", optional = true }

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }

[[bin]]
name = "RusT-thread"
test = false
bench = false
required-features = ["embedded"]

# 添加 benchmark 配置
[[bench]]
name = "scheduler_bench"
harness = false

[[bench]]
name = "memory_bench"
harness = false

[[bench]]
name = "context_switch_bench"
harness = false

[[bench]]
name = "timer_bench"
harness = false

[profile.release]
codegen-units = 1 # better optimizations
debug = true # symbols are nice and they don't increase the size on Flash
lto = true # better optimizations

[features]
default = ["embedded"]
embedded = [
    "cortex-m", 
    "cortex-m-semihosting", 
    "cortex-m-rt", 
    "panic-halt",
    "buddy_system_allocator", 
    "lazy_static",
    "spin",
    "heapless",
    "tiny_ffs",
    "test"
]
#default = ["good_memory_allocator", "tiny_ffs","test"]
good_memory_allocator = ["dep:good_memory_allocator"]
buddy_system_allocator = ["dep:buddy_system_allocator"]
tiny_ffs = []
full_ffs = []
hook = []
mem_trace = [] # 内存跟踪功能，用于调试与分析
debug = []
test = ["test_thread"]
test_thread = []
test_small_mem = [] # 小内存管理测试